from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command

from app.database.cart_db import db
from app.keyboards.menu_kb import *
from app.keyboards.kb_data import MENU_DATA

router = Router()
menu_kb = MenuKeyboard()

text_start = "üñê–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –∏–≥—Ä—É—à–µ–∫ '–í–µ—Ä–∞'. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É—à–∫—É –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç"

@router.callback_query(F.data.startswith("levl_"))
async def handle_menu(callback: CallbackQuery):
    path = callback.data.replace("levl_", "")
    # 1. –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ MENU_DATA
    current_item = next(
        (item for parent in MENU_DATA.values()
         for item in parent
         if item["callback_data"] == f"levl_{path}"),
        None
    )
    # 2. –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç
    photo = FSInputFile(current_item["photo"]) if current_item else None
    caption = current_item.get("caption", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª") if current_item else "–†–∞–∑–¥–µ–ª"

    if photo:
        await callback.message.delete()
        await callback.message.answer_photo(photo=photo, caption=caption, reply_markup=menu_kb.build(path))
    else:
        await callback.message.delete()
        await callback.message.answer(
            text=caption,
            reply_markup=menu_kb.build(path))

        await callback.answer()


@router.callback_query(F.data.startswith("beck_"))
async def handle_back(callback: CallbackQuery):
    parent_path = callback.data.replace("beck_", "")  # "1.1"

    # 1. –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
    parent_item = next(
        (item for level in MENU_DATA.values()
         for item in level
         if item["callback_data"] == f"levl_{parent_path}"),
        None
    )

    # 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    photo = FSInputFile(parent_item["photo"]) if parent_item else None
    caption = parent_item.get("caption", "–í–æ–∑–≤—Ä–∞—Ç") if parent_item else "–ù–∞–∑–∞–¥"

    if photo:
        await callback.message.delete()
        await callback.message.answer_photo(
            photo=photo,
            caption=caption,
            reply_markup=menu_kb.build(parent_path))
    else:
        await callback.message.delete()
        await callback.message.answer(
            text=text_start,
            reply_markup=menu_kb.build(parent_path))

    await callback.answer()


@router.callback_query(F.data.startswith("cart_"))
async def handle_back(callback: CallbackQuery):
    parent_path = callback.data.replace("cart_", "")  # "1.1"

    # 1. –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
    parent_item = next(
        (item for level in MENU_DATA.values()
         for item in level
         if item["callback_data"] == f"levl_{parent_path}"),
        None
    )

    # 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    caption = parent_item.get("caption", "–í–æ–∑–≤—Ä–∞—Ç")
    await db.add_to_cart(callback.from_user.id, caption)
    await callback.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
